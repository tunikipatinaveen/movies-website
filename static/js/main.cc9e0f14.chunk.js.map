{"version":3,"sources":["card.js","App.js","reportWebVitals.js","index.js"],"names":["Card","props","useState","activeID","setActiveID","className","movies","map","item","imdbID","onClick","alt","Title","src","Poster","App","state","filterMovies","a","fetch","response","json","this","setState","Search","type","placeholder","onChange","e","filterMovie","filter","toLowerCase","includes","target","value","length","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mTAmBeA,EAhBF,SAACC,GACV,MAAgCC,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KAEA,OAAQ,qBAAKC,UAAU,iBAAf,SACHJ,EAAMK,OAAOC,KAAI,SAAAC,GACd,OACI,sBAAKH,UAAWG,EAAKC,SAAWN,EAAW,oBAAsB,aAAgCO,QAAS,kBAAMN,EAAYI,EAAKC,SAAjI,UACI,qBAAKE,IAAKH,EAAKI,MAAOP,UAAU,WAAWQ,IAAKL,EAAKM,SACrD,mBAAGT,UAAU,aAAb,SAA2BG,EAAKI,UAFgDJ,EAAKC,cC0B1FM,G,wDA9Bb,WAAYd,GAAQ,IAAD,8BACjB,cAAMA,IACDe,MAAQ,CACXV,OAAQ,GACRH,SAAU,GACVc,aAAc,IALC,E,4FAUnB,8BAAAC,EAAA,sEACyBC,MAAM,kDAD/B,cACQC,EADR,gBAEqBA,EAASC,OAF9B,OAEQA,EAFR,OAGEC,KAAKC,SAAS,CAAEjB,OAAQe,EAAKG,SAH/B,gD,0EAMA,WAAU,IAAD,OACP,OAAQ,gCACN,oBAAInB,UAAU,UAAd,6BACA,uBAAOA,UAAU,aAAaoB,KAAK,OAAOC,YAAY,2BAA2BC,SAAU,SAACC,GAC1F,IAAIC,EAAc,EAAKb,MAAMV,OAAOwB,QAAO,SAACtB,GAAD,OAAUA,EAAKI,MAAMmB,cAAcC,SAASJ,EAAEK,OAAOC,UAChG,EAAKX,SAAS,CAAEN,aAAcY,OAGhC,cAAC,EAAD,CAAMvB,OAAQgB,KAAKN,MAAMC,aAAakB,OAAS,EAAIb,KAAKN,MAAMC,aAAeK,KAAKN,MAAMV,gB,GAzB5E8B,cCQHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.cc9e0f14.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './card.css'\n\nconst Card = (props) => {\n    const [activeID, setActiveID] = useState('')\n\n    return (<div className='card-container'>\n        {props.movies.map(item => {\n            return (\n                <div className={item.imdbID === activeID ? 'card-style active' : 'card-style'} key={item.imdbID} onClick={() => setActiveID(item.imdbID)}>\n                    <img alt={item.Title} className='card-img' src={item.Poster} />\n                    <p className='card-title'>{item.Title}</p>\n                </div>\n            )\n        })}\n\n    </div>);\n}\n\nexport default Card;","import React, { Component } from 'react';\nimport Card from './card';\nimport './App.css'\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      movies: [],\n      activeID: '',\n      filterMovies: []\n    }\n  }\n\n\n  async componentDidMount() {\n    const response = await fetch(`https://www.omdbapi.com/?apikey=45f0782a&s=war`);\n    const json = await response.json();\n    this.setState({ movies: json.Search });\n  }\n\n  render() {\n    return (<div>\n      <h1 className='heading'>Trending Movies</h1>\n      <input className='search-bar' type=\"text\" placeholder=\"Enter Movie Name .......\" onChange={(e) => {\n        let filterMovie = this.state.movies.filter((item) => item.Title.toLowerCase().includes(e.target.value))\n        this.setState({ filterMovies: filterMovie })\n      }} />\n\n      <Card movies={this.state.filterMovies.length > 0 ? this.state.filterMovies : this.state.movies} />\n\n    </div>);\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}